{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","persons","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","deletePerson","delete","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","person","state","find","p","name","newName","undefined","number","newNumber","personService","newPerson","setState","statusMessage","window","confirm","objectSpread","res_person","map","catch","error","filter","setTimeout","handleChange","field","console","log","target","value","defineProperty","_this2","_this3","filteredPersons","toLowerCase","search","react_default","a","createElement","App_Notification","message","App_FilterForm","App_AddPersonForm","App_Person","key","React","Component","FilterForm","_ref","onChange","AddPersonForm","_ref2","onSubmit","type","Person","_ref3","onClick","Notification","_ref4","className","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a4a9d5ec.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n    .then(response => response.data)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n    .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n    .then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }\n","import React from 'react'\nimport personService from './services/persons'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: '',\n      filter: '',\n      statusMessage: null,\n    }\n  }\n\n  componentDidMount() {\n    personService\n      .getAll()\n      .then(persons => this.setState({ persons }))\n  }\n\n  addPerson = (event) => {\n    event.preventDefault()\n    const person = this.state.persons.find(p => p.name === this.state.newName)\n    if (person === undefined) {\n      const person = {\n        name: this.state.newName,\n        number: this.state.newNumber\n      }\n      personService\n        .create(person)\n        .then(newPerson => {\n          this.setState({\n            persons: this.state.persons.concat(newPerson),\n            statusMessage: `Lisättiin ${newPerson.name}`\n          })\n        })\n    } else if (window.confirm(`${this.state.newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n      const newPerson = { ...person, number: this.state.newNumber }\n      personService\n        .update(newPerson.id, newPerson)\n        .then(res_person => {\n          this.setState({\n            persons: this.state.persons.map(p => p.id !== res_person.id ? p : res_person),\n            statusMessage: `Päivitettiin numero henkilölle ${newPerson.name}`\n          })\n        })\n        .catch(error => {\n          this.setState({\n            persons: this.state.persons.filter(person => person.id !== newPerson.id),\n          })\n          delete newPerson.id\n          personService\n            .create(newPerson)\n            .then(newPerson => {\n              this.setState({\n                persons: this.state.persons.concat(newPerson),\n                statusMessage: `Lisättiin uudelleen ${newPerson.name}`\n              })\n            })\n        })\n    }\n    this.setState({\n      newName: '',\n      newNumber: '',\n      filter: ''\n    })\n    setTimeout(() => {\n      this.setState({\n        statusMessage: null\n      })\n    }, 5000)\n  }\n\n  deletePerson = (id) => (\n    () => {\n      const name = this.state.persons.find(p => p.id === id).name\n      if (window.confirm(`Poistetaanko ${name}?`)) {\n        personService\n          .deletePerson(id)\n          .then(response => {\n            this.setState({\n              persons: this.state.persons.filter(person => person.id !== id),\n              statusMessage: `Poistettiin ${name}`\n            })\n          })\n        setTimeout(() => {\n          this.setState({\n            statusMessage: null\n          })\n        }, 5000)\n      }\n    }\n  )\n\n  handleChange = (field) => (\n    (event) => {\n      console.log(event.target.value)\n      this.setState({ [field]: event.target.value })\n    }\n  )\n\n  render() {\n    const filteredPersons =\n      this.state.persons.filter(person => person.name.toLowerCase().search(this.state.filter.toLowerCase()) > -1)\n\n    return (\n      <div>\n        <h1>Puhelinluettelo</h1>\n        <Notification\n          message={this.state.statusMessage}\n        />\n        <FilterForm\n          state={this.state}\n          handleChange={this.handleChange}\n        />\n        <AddPersonForm\n          state={this.state}\n          handleChange={this.handleChange}\n          addPerson={this.addPerson}\n        />\n        <h2>Numerot</h2>\n        <table>\n          <tbody>\n            {filteredPersons.map(person =>\n              <Person\n                key={person.id}\n                person={person}\n                deletePerson={this.deletePerson(person.id)}\n              />\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst FilterForm = ({ state, handleChange }) => (\n  <div>\n    rajaa näytettäviä:\n    <input\n      value={state.filter}\n      onChange={handleChange('filter')}\n    />\n  </div>\n)\n\nconst AddPersonForm = ({ state, handleChange, addPerson }) => (\n  <div>\n    <h2>Lisää uusi</h2>\n    <form onSubmit={addPerson}>\n      <div>\n        nimi:\n        <input\n          value={state.newName}\n          onChange={handleChange('newName')}\n        />\n      </div>\n      <div>\n        numero:\n        <input\n          value={state.newNumber}\n          onChange={handleChange('newNumber')}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  </div>\n)\n\nconst Person = ({ person, deletePerson })  => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.number}</td>\n    <td><button onClick={deletePerson}>poista</button></td>\n  </tr>\n\n)\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}